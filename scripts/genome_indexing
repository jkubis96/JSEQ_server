#!/bin/bash 

#ref fiile generate

function create_ref {
cpu=$(grep -c ^processor /proc/cpuinfo)
cpu=$cpu-2

samtools dict $(pwd)/genome/$species/genome.fa > $(pwd)/genome/$species/genome.dict 

}


function rna_intervals {

SCRIPTS_EXTRACT=$(pwd)/setup
java -jar $SCRIPTS_EXTRACT/DropSeq/jar/dropseq.jar CreateIntervalsFiles \
        REDUCED_GTF=$(pwd)/genome/$species/reduced_annotation.gtf \
        SEQUENCE_DICTIONARY=$(pwd)/genome/$species/genome.dict \
        O=$(pwd)/genome/$species/ \
        PREFIX='/annotation'
}

#########################################################################################################################


function GENOME {

echo -e '\033[1;36m Enter the species [human/mice/mix/custom]:'
echo ''

read species
#config
source $(pwd)/requirements_file/genome.conf
human_genome=$human_genome
human_annotation=$human_annotation

mice_genome=$mice_genome
mice_annotation=$mice_annotation

custom_genome=$custom_genome
custom_annotation=$custom_annotation

species=$(echo $species | tr '[:upper:]' '[:lower:]')
source=$(pwd)/scripts
input_mice=$(pwd)/genome/$species/annotation_mice.gtf
input_human=$(pwd)/genome/$species/annotation_human.gtf
output_mix=$(pwd)/genome/$species/annotation.gtf
CHECK=$(pwd)/genome


if [[ $species == 'human' ]]
then

        mkdir -p genome
		mkdir -p genome/$species
        cd genome/$species
        wget ${human_annotation} -O annotation.gtf.gz
		gunzip annotation.gtf.gz
		wget ${human_genome} -O genome.fa.gz
		gunzip genome.fa.gz
		
		cd ..
		cd ..
		
		echo -e "\033[0;34m $(date) Creating genome reference files"
		create_ref  
	
		Rscript $source/genome_prep.R $species $(pwd)/genome/$species/annotation.gtf $(pwd)/genome/$species
		
		echo -e "\033[0;34m $(date) Generating of the intervals"
		rna_intervals
		
		echo -e "\033[0;32m $(date) Process DONE!"
		
		for READS_LENGHT in 75 100 150 200 250 300;	
		do	
				
		mkdir -p genome/$species/index/$READS_LENGHT 
		cpu=$(grep -c ^processor /proc/cpuinfo)
		cpu=$cpu-2
		DIR=$(pwd)/genome/$species/index/$READS_LENGHT 
		GENOME=$(pwd)/genome/$species
		lenght=$READS_LENGHT

		mem=$(($(getconf _PHYS_PAGES) * $(getconf PAGE_SIZE) / (1024 * 1024)))
		mem=$[$mem * 1000000]

		STAR --runThreadN $cpu  --runMode genomeGenerate --genomeDir $DIR  --genomeFastaFiles $GENOME/*.fa  --sjdbGTFfile $GENOME/correct_annotation.gtf --limitGenomeGenerateRAM $mem --sjdbOverhang $lenght

		done; 

		
		
	
start

elif [[ $species == 'mice' ]]
then
		mkdir -p genome
        mkdir -p genome/$species
        cd genome/$species
		
        wget ${mice_annotation} -O annotation.gtf.gz
		gunzip annotation.gtf.gz
		wget ${mice_genome} -O genome.fa.gz
		gunzip genome.fa.gz
		
		cd ..
		cd ..
		
		echo -e "\033[0;34m $(date) Creating genome reference files"
		create_ref  
	
		Rscript $source/genome_prep.R $species $(pwd)/genome/$species/annotation.gtf $(pwd)/genome/$species
		
		echo -e "\033[0;34m $(date) Generating of the intervals"
		rna_intervals
		
		echo -e "\033[0;32m $(date) Process DONE!"
		
		for READS_LENGHT in 75 100 150 200 250 300;	
		do	
				
		mkdir -p genome/$species/index/$READS_LENGHT 
		cpu=$(grep -c ^processor /proc/cpuinfo)
		cpu=$cpu-2
		DIR=$(pwd)/genome/$species/index/$READS_LENGHT 
		GENOME=$(pwd)/genome/$species
		lenght=$READS_LENGHT

		mem=$(($(getconf _PHYS_PAGES) * $(getconf PAGE_SIZE) / (1024 * 1024)))
		mem=$[$mem * 1000000]

		STAR --runThreadN $cpu  --runMode genomeGenerate --genomeDir $DIR  --genomeFastaFiles $GENOME/*.fa  --sjdbGTFfile $GENOME/correct_annotation.gtf --limitGenomeGenerateRAM $mem --sjdbOverhang $lenght

		done; 


start



elif [[ $species == 'custom' ]]
then	
		
		mkdir -p genome
        mkdir -p genome/$species
        cd genome/$species
		
        wget ${custom_annotation} -O annotation.gtf.gz
		gunzip annotation.gtf.gz
		wget ${custom_genome} -O genome.fa.gz
		gunzip genome.fa.gz
		
		cd ..
		cd ..
		
		echo -e "\033[0;34m $(date) Creating genome reference files"
		create_ref  
	
		Rscript $source/genome_prep.R $species $(pwd)/genome/$species/annotation.gtf $(pwd)/genome/$species
		
		echo -e "\033[0;34m $(date) Generating of the intervals"
		rna_intervals
		
		echo -e "\033[0;32m $(date) Process DONE!"
		
		
		for READS_LENGHT in 75 100 150 200 250 300;
		do	
				
		mkdir -p genome/$species/index/$READS_LENGHT 
		cpu=$(grep -c ^processor /proc/cpuinfo)
		cpu=$cpu-2
		DIR=$(pwd)/genome/$species/index/$READS_LENGHT 
		GENOME=$(pwd)/genome/$species
		lenght=$READS_LENGHT

		mem=$(($(getconf _PHYS_PAGES) * $(getconf PAGE_SIZE) / (1024 * 1024)))
		mem=$[$mem * 1000000]

		STAR --runThreadN $cpu  --runMode genomeGenerate --genomeDir $DIR  --genomeFastaFiles $GENOME/*.fa  --sjdbGTFfile $GENOME/correct_annotation.gtf --limitGenomeGenerateRAM $mem --sjdbOverhang $lenght

		done; 

		
start

fi

}

