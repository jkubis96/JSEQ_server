#!/bin/bash  

echo ''

echo -e '\033[1;33m Welcome to the JSEQÂ® Single-Cell RNA Seq tool'

echo -e '\033[1;33m The pipeline was prepared at the Institute of Bioorganic Chemistry, Polish Academy of Sciences'

echo -e '\033[1;33m All information and references you can check in the file JSEQ manual on my GitHub'

echo -e '\033[1;33m Contact: jbiosystem@gmail.com or jakub.kubis1996@gmail.com'

echo ''
echo ''


function start {

echo ''
echo -e '\033[1;36m Choose JSEQ function:'
echo -e '\033[1;36m -installation [install]'
echo -e '\033[1;36m -start container [start]'
echo -e '\033[1;36m -start queue [queue]'
echo -e '\033[1;36m -run app [app]'
echo -e '\033[1;36m -quit [q]'
echo ''
echo -e '\033[1;36m Choose function:'
echo ''
	read s
	s=$(echo $s | tr '[:upper:]' '[:lower:]')

if [[ $s == 'install' ]]
then
	
	log_install=$(pwd)/setup/install.log.out
		
	source $(pwd)/requirements
	
	enviroment  >> $log_install 2>&1
	
	sudo apt-get -y install unzip >> $log_install 2>&1
	
	cd setup 
	
	echo -e "\033[0;31m $(date) Localhost env preparing..."
	wget -O DropSeq.zip https://github.com/broadinstitute/Drop-seq/releases/download/v2.4.0/Drop-seq_tools-2.4.0.zip >> $log_install 2>&1
	unzip DropSeq >> $log_install 2>&1
	mv Drop-seq_tools-2.4.0 DropSeq >> $log_install 2>&1
	rm -r DropSeq.zip >> $log_install 2>&1

	cd ..
	
	echo -e "\033[0;31m $(date) Docker admin build starting..."
	sudo docker build -t jseq_admin -f Dockerfile_admin .
	id=$(docker images --format "{{.ID}}" jseq_admin)
	echo $id
	echo id=$id > $(pwd)/setup/docker_id_admin
	
		
	echo -e "\033[0;31m $(date) Docker server build starting..."
	sudo docker build -t jseq_server -f Dockerfile .
	id=$(docker images --format "{{.ID}}" jseq_server)
	echo $id
	echo id=$id > $(pwd)/setup/docker_id
	
	
	source $(pwd)/requirements_file/system_files
	sudo docker pull postgres:12
	sudo docker run --name jbdb_sql --restart always -e PGDATA=/var/lib/postgresql/data/pgdata -e POSTGRES_USER=$sys4 -e POSTGRES_PASSWORD=$sys4 -e  POSTGRES_DB=jbsda -v /sql:/var/lib/postgresql/data --name postgresql -p 5432:5432 -d postgres:12
	
	
	start
	
	
	
		
elif [[ $s == 'start' ]]
then



    source $(pwd)/setup/docker_id_admin
	id=$id
	docker run --privileged --rm -it -v $(pwd):/app/JSEQ_server $id
	
elif [[ $s == 'queue' ]]
then

	nohup python3 $(pwd)/scripts/queue.py $(pwd)/tasks > nohup_log 2>&1 &
	start
	
elif [[ $s == 'app' ]]
then

	nohup R -e "shiny::runApp('app/main/main.R', port = 1111, host = '127.0.0.1')" &	
	start
	
	
elif [[ $s == 'q' ]]
then
        exit
		

fi
}

start